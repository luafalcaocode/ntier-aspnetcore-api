// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using luafalcao.api.Persistence.Contexts;

namespace luafalcao.api.Web.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20200820170737_CreatingBusinessEntities")]
    partial class CreatingBusinessEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "48cd903a-4de1-4e6b-be80-18e4ee068dc9",
                            ConcurrencyStamp = "4ce8e062-8276-4460-8b0a-99de3fe8b448",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        },
                        new
                        {
                            Id = "c05ff7ba-d902-4408-8343-238749c14e4b",
                            ConcurrencyStamp = "5f852c4a-f5d4-4958-91af-9d248b3a8967",
                            Name = "Comum",
                            NormalizedName = "Comum"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Artigo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<int>("NumeroLikes")
                        .HasColumnType("integer");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<byte[]>("Thumbnail")
                        .HasColumnType("bytea");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artigo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataPublicacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Chegou a vez do padrão de projetos Adapter! Vamos ver como usá-lo para tornar o nosso código mais flexível",
                            NumeroLikes = 5,
                            Tags = "DIARIO-ENGENHEIRO-SOFTWARE",
                            Titulo = "Design Patterns #5: Adapter"
                        },
                        new
                        {
                            Id = 2,
                            DataPublicacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Padrões de projeto são soluções flexíveis e reutilizáveis para problemas frequentes no dia a dia do programador...",
                            NumeroLikes = 10,
                            Tags = "DIARIO-ENGENHEIRO-SOFTWARE",
                            Titulo = "Padrões de Projeto e onde habitam"
                        });
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ArtigoId")
                        .HasColumnType("integer");

                    b.Property<string>("Autor")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArtigoId");

                    b.ToTable("Comentario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtigoId = 1,
                            Autor = "Jaina Proudmore",
                            DataPublicacao = new DateTime(1, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Adorei o Artigo! Parabéns!"
                        },
                        new
                        {
                            Id = 2,
                            ArtigoId = 1,
                            Autor = "Iena Hard",
                            DataPublicacao = new DateTime(1, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Não concordo com o que você escreveu sobre o Adapter! Ele é mais complexo do que isso! Mas boa tentativa!!"
                        },
                        new
                        {
                            Id = 3,
                            ArtigoId = 2,
                            Autor = "Tron",
                            DataPublicacao = new DateTime(1, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Padrões de projeto são muito importantes!! Espero que no futuro mais programadores façam uso deles para criar soluções de valor!"
                        });
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("text");

                    b.HasKey("FuncionarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Funcionario");

                    b.HasData(
                        new
                        {
                            FuncionarioId = 1,
                            Email = "superadmin@email.com",
                            Nome = "Luã Falcão",
                            UsuarioId = "9e203a7a-55ac-4186-9a2b-2e0961235316"
                        });
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Recurso", b =>
                {
                    b.Property<int>("RecursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("NumeroDeVotos")
                        .HasColumnType("integer");

                    b.HasKey("RecursoId");

                    b.ToTable("Recursos");

                    b.HasData(
                        new
                        {
                            RecursoId = 1,
                            Nome = "Push Notifications",
                            NumeroDeVotos = 1
                        },
                        new
                        {
                            RecursoId = 2,
                            Nome = "Pagamento usando cartão de crédito e boleto bancário",
                            NumeroDeVotos = 0
                        },
                        new
                        {
                            RecursoId = 3,
                            Nome = "Leitura de código de barras para realizar compras",
                            NumeroDeVotos = 0
                        });
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Votacao", b =>
                {
                    b.Property<int>("VotacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("integer");

                    b.Property<int>("RecursoId")
                        .HasColumnType("integer");

                    b.Property<int?>("RecursoId1")
                        .HasColumnType("integer");

                    b.HasKey("VotacaoId");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.HasIndex("RecursoId");

                    b.HasIndex("RecursoId1");

                    b.ToTable("Votacao");

                    b.HasData(
                        new
                        {
                            VotacaoId = 1,
                            Comentario = "Este recurso é importante para o cliente",
                            DataHora = new DateTime(2020, 8, 20, 14, 7, 36, 918, DateTimeKind.Local).AddTicks(9042),
                            FuncionarioId = 1,
                            RecursoId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("luafalcao.api.Persistence.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("luafalcao.api.Persistence.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("luafalcao.api.Persistence.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("luafalcao.api.Persistence.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Comentario", b =>
                {
                    b.HasOne("luafalcao.api.Persistence.Entities.Artigo", "Artigo")
                        .WithMany("Comentarios")
                        .HasForeignKey("ArtigoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Funcionario", b =>
                {
                    b.HasOne("luafalcao.api.Persistence.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("luafalcao.api.Persistence.Entities.Votacao", b =>
                {
                    b.HasOne("luafalcao.api.Persistence.Entities.Funcionario", "Funcionario")
                        .WithOne("Votacao")
                        .HasForeignKey("luafalcao.api.Persistence.Entities.Votacao", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("luafalcao.api.Persistence.Entities.Recurso", "Recurso")
                        .WithMany()
                        .HasForeignKey("RecursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("luafalcao.api.Persistence.Entities.Recurso", null)
                        .WithMany("Votacoes")
                        .HasForeignKey("RecursoId1");
                });
#pragma warning restore 612, 618
        }
    }
}
